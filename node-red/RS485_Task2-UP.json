[
    {
        "id": "dcbbdfc221d3d6dd",
        "type": "tab",
        "label": "SMART TORQUE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c5e0ee85a0ded4e6",
        "type": "modbus-read",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "20",
        "rate": "150",
        "rateUnit": "ms",
        "delayOnStart": true,
        "startDelayTime": "5",
        "server": "ad2ee103afd4939c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "406899b235e1338f",
                "8f49d9a24d4a82e6"
            ],
            [
                "fdf3d7ca6e059937"
            ]
        ]
    },
    {
        "id": "406899b235e1338f",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 160,
        "wires": []
    },
    {
        "id": "fdf3d7ca6e059937",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 420,
        "wires": []
    },
    {
        "id": "b72d5bbd8da0d88b",
        "type": "modbus-getter",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "4",
        "server": "ad2ee103afd4939c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 880,
        "y": 240,
        "wires": [
            [
                "907c57ee1448ddf1"
            ],
            []
        ]
    },
    {
        "id": "d5d8195296286523",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "RFID",
        "func": "const data = msg.payload;\n\nif(data[1] == true){\n    msg.payload = data[1];\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 240,
        "wires": [
            [
                "b72d5bbd8da0d88b",
                "f5d12dbf972876f0"
            ]
        ]
    },
    {
        "id": "907c57ee1448ddf1",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Combine card",
        "func": "const data = msg.payload;\nconst upper = data[1];\nconst lower = data[2];\n// Combine the two parts into one 32-bit integer\nlet cardNumber = (upper << 16) | lower;\ncardNumber = (upper * 65536) + lower;\nmsg.payload = {\n    cardNumber: cardNumber,\n    cardType: data[3] // Assuming there is other data in data[3]\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 240,
        "wires": [
            [
                "ad4012854a793fd3",
                "6f4e3e308d9e8449",
                "d6b95b2ac17f3a35"
            ]
        ]
    },
    {
        "id": "e0bd8814966151c9",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "RESET STATE",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1680,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d6b95b2ac17f3a35",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Reset Data",
        "func": "msg.payload = false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 240,
        "wires": [
            [
                "e0bd8814966151c9"
            ]
        ]
    },
    {
        "id": "3ecd287e0dc60149",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "START",
        "func": "const data = msg.payload;\n\nif(data[5]== true){\n    msg.payload = data[5];\n    // node.warn(\"START\")\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 360,
        "wires": [
            [
                "698002cb4fde3899"
            ]
        ]
    },
    {
        "id": "698002cb4fde3899",
        "type": "modbus-getter",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "Input",
        "adr": "5",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 880,
        "y": 360,
        "wires": [
            [
                "e65dcbce6e97640f"
            ],
            []
        ]
    },
    {
        "id": "e65dcbce6e97640f",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "GET STATE START",
        "func": "const data = msg.payload;\nmsg.payload = data[0];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 360,
        "wires": [
            [
                "571981ae946c0389",
                "7b14bf065653afcd",
                "ad57b762b82a0523"
            ]
        ]
    },
    {
        "id": "571981ae946c0389",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 500,
        "wires": []
    },
    {
        "id": "f5d12dbf972876f0",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 180,
        "wires": []
    },
    {
        "id": "7b14bf065653afcd",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Reset Data",
        "func": "msg.payload = false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 360,
        "wires": [
            [
                "88c947b156a31bc7"
            ]
        ]
    },
    {
        "id": "88c947b156a31bc7",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "RESET STATE",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "5",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1680,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ad57b762b82a0523",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Process",
        "func": "const data = msg.payload;\nif(data){\nglobal.set('state-start','ON')\n}else{\n global.set('state-start','OFF')\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 440,
        "wires": [
            [
                "96ec47a52e21e650"
            ]
        ]
    },
    {
        "id": "ebb48db6f14f98a9",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "STOP",
        "func": "const data = msg.payload;\n\nif (data[6] == true){\n    msg.payload = data[6];\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 600,
        "wires": [
            [
                "0c2f9edbf786fc0d",
                "32225e1556c4a162",
                "51e1339c544741ae"
            ]
        ]
    },
    {
        "id": "51e1339c544741ae",
        "type": "modbus-getter",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "Input",
        "adr": "6",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 820,
        "y": 600,
        "wires": [
            [
                "a626cd42e366f590",
                "11ecb11a6ef41b4e"
            ],
            []
        ]
    },
    {
        "id": "a626cd42e366f590",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "GET STATE STOP",
        "func": "const data = msg.payload;\nif(data[0] == true){\n    msg.payload = data[0];\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 600,
        "wires": [
            [
                "064979fdc6ca0ac0",
                "3764e19836e6b5fe"
            ]
        ]
    },
    {
        "id": "32225e1556c4a162",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Reset Data",
        "func": "msg.payload = false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 520,
        "wires": [
            [
                "167c6b0dafdfd4c9"
            ]
        ]
    },
    {
        "id": "167c6b0dafdfd4c9",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "RESET STATE",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "6",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1040,
        "y": 520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "13a5ae1d325656d1",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET SCW",
        "func": "const data = msg.payload;\n\nconst upperStart16 = data[20];\nconst lowerStart16 = data[21];\nconst timeSTART = (upperStart16 << 16) | lowerStart16;\n\nglobal.set('timeSTART',timeSTART);\nconst upperStop16 = data[14];\nconst lowerStop16 = data[15];\nconst timeSTOP = (upperStop16 << 16) | lowerStop16;\n\nglobal.set('timeSTOP', timeSTOP);\n\n\nconst upper16 = data[16];\nconst lower16 = data[17];\n// Combine them to form the original 32-bit value\nconst timeDiff = (upper16 << 16) | lower16;\n// node.warn({'time_diff':timeDiff});\n// update time diff\nglobal.set('time_diff',timeDiff)\n\nlet current_scw = global.get('current_scw');\nif(current_scw == undefined){\n    current_scw = 0;\n}\n// node.warn(data[18]);\nif(data[18] !== undefined){\n    current_scw = data[18];\n}\n\nglobal.set('current_scw', current_scw);\nconst scw_step = data[9];\n\nglobal.set('scw_step', scw_step);\n\n// node.warn({current_scw,scw_step});\n\nglobal.set(\"scw_diff\",{current_scw,scw_step})\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 620,
        "wires": [
            [
                "495c6611c913e32a",
                "f48414d445243002",
                "68eebc81aa5ee063",
                "eb838245563cc03c"
            ]
        ]
    },
    {
        "id": "ad4012854a793fd3",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 80,
        "wires": []
    },
    {
        "id": "6f4e3e308d9e8449",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Query Data",
        "func": "const playload = msg.payload;\nif (playload.cardNumber){\n    msg.payload = {\n        \"card_uid\": playload.cardNumber\n    }\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 140,
        "wires": [
            [
                "af49bb0fe2351d71"
            ]
        ]
    },
    {
        "id": "f2013260f61de49b",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1870,
        "y": 60,
        "wires": []
    },
    {
        "id": "644cf7f9c79b0ca6",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "cardNumber",
        "payloadType": "str",
        "x": 1140,
        "y": 120,
        "wires": [
            [
                "6f4e3e308d9e8449"
            ]
        ]
    },
    {
        "id": "af49bb0fe2351d71",
        "type": "http request",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://localhost:5030/card-rfid/verify-card",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 1610,
        "y": 140,
        "wires": [
            [
                "f2013260f61de49b",
                "4ad3a4b1519a967d",
                "4461ba287742b974"
            ]
        ]
    },
    {
        "id": "4ad3a4b1519a967d",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Validate Data",
        "func": "const playload = msg.payload;\nconst status = playload.status;\nmsg.payload = status === true ? true : false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 180,
        "wires": [
            [
                "2cc963e52cb7a0ab",
                "b642b23da8d0ece3",
                "87735bb56d3e5d45"
            ]
        ]
    },
    {
        "id": "2cc963e52cb7a0ab",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 180,
        "wires": []
    },
    {
        "id": "8f49d9a24d4a82e6",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out 1 serial",
        "mode": "link",
        "links": [
            "b70ee06e91ed062f",
            "f190ba76f7157c56",
            "a5feefbca0ad9e49",
            "0a2d071ad2ce5000",
            "3e49e45dab735908",
            "a2e4f4c5b6d2c217"
        ],
        "x": 275,
        "y": 240,
        "wires": []
    },
    {
        "id": "b70ee06e91ed062f",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in stop",
        "links": [
            "8f49d9a24d4a82e6"
        ],
        "x": 365,
        "y": 600,
        "wires": [
            [
                "ebb48db6f14f98a9"
            ]
        ]
    },
    {
        "id": "f190ba76f7157c56",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in start",
        "links": [
            "8f49d9a24d4a82e6"
        ],
        "x": 345,
        "y": 360,
        "wires": [
            [
                "3ecd287e0dc60149"
            ]
        ]
    },
    {
        "id": "a5feefbca0ad9e49",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in rfid",
        "links": [
            "8f49d9a24d4a82e6"
        ],
        "x": 345,
        "y": 240,
        "wires": [
            [
                "d5d8195296286523"
            ]
        ]
    },
    {
        "id": "91c0efc2d347a598",
        "type": "comment",
        "z": "dcbbdfc221d3d6dd",
        "name": "SETUP",
        "info": "1. GET SETUP FROM ARDUINO\n2. IF NOT SET UP\n3. RESET ARDUINO STATE SETUP\n-------------------------\n4. CALL RESET Sequence for active\n-------------------------\n5. UPDATE NAME, MIN, MAX, SCW COUNT",
        "x": 190,
        "y": 740,
        "wires": []
    },
    {
        "id": "80b6ee9dea3dec0b",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SETUP",
        "func": "const data = msg.payload;\nif(data[2] == true){\n    msg.payload = data[2];\n    node.warn('Set Up')\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1100,
        "wires": [
            [
                "606ea455b923fdcc"
            ]
        ]
    },
    {
        "id": "5da4db7731170747",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET NAME",
        "func": "const name = msg.payload;\n\nglobal.set('name',name);\n\nfunction stringToByteArray(str) {\n    let byteArray = [];\n    for (let i = 0; i < str.length; i++) {\n        byteArray.push(str.charCodeAt(i));\n    }\n    return byteArray;\n}\n\nlet byteArray = stringToByteArray(name);\n\n// เตรียม holding registers สำหรับส่งข้อมูล\nlet holdingRegisters = [];\nfor (let i = 0; i < byteArray.length; i += 2) {\n    let word = (byteArray[i] << 8) | (byteArray[i + 1] || 0);\n    holdingRegisters.push(word);\n}\n\n// ใส่ค่าใน msg.payload ตามฟอร์แมตที่ต้องการ\nmsg.payload = holdingRegisters;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1320,
        "wires": [
            [
                "a985da517a9e7af2",
                "7e0282cb7502d3af"
            ]
        ]
    },
    {
        "id": "a985da517a9e7af2",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE NAME",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "MHoldingRegisters",
        "adr": "10",
        "quantity": "2",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 760,
        "y": 1320,
        "wires": [
            [
                "88480fd7086a11a3"
            ],
            [
                "0708e2bff1288486"
            ]
        ]
    },
    {
        "id": "49fd9223b7bd18bc",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 1320,
        "wires": [
            [
                "5da4db7731170747"
            ]
        ]
    },
    {
        "id": "88480fd7086a11a3",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1320,
        "wires": []
    },
    {
        "id": "0708e2bff1288486",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 1400,
        "wires": []
    },
    {
        "id": "7e0282cb7502d3af",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1420,
        "wires": []
    },
    {
        "id": "0c2f9edbf786fc0d",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 460,
        "wires": []
    },
    {
        "id": "9bd99ce53091bd3d",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET MIN",
        "func": "\nmsg.payload = 200;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1480,
        "wires": [
            [
                "6770ab0d583eed96",
                "27831cbfc9d64245"
            ]
        ]
    },
    {
        "id": "6770ab0d583eed96",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE MIN",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "7",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 760,
        "y": 1480,
        "wires": [
            [
                "4be60cb6f2321d51"
            ],
            [
                "e5ade98636393493"
            ]
        ]
    },
    {
        "id": "e981e997bb8741d0",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 1480,
        "wires": [
            [
                "9bd99ce53091bd3d"
            ]
        ]
    },
    {
        "id": "4be60cb6f2321d51",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1480,
        "wires": []
    },
    {
        "id": "e5ade98636393493",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1560,
        "wires": []
    },
    {
        "id": "27831cbfc9d64245",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1580,
        "wires": []
    },
    {
        "id": "32e22636d760d231",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET MAX",
        "func": "\nmsg.payload = 1500;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1680,
        "wires": [
            [
                "adbedb5f89de226e",
                "0247b4f86b0f81bc"
            ]
        ]
    },
    {
        "id": "adbedb5f89de226e",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE MAX",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "8",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 760,
        "y": 1680,
        "wires": [
            [
                "61f5bff121743562"
            ],
            [
                "7319ba17fc4bf7f0"
            ]
        ]
    },
    {
        "id": "988ccbba657c8e70",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 1680,
        "wires": [
            [
                "32e22636d760d231"
            ]
        ]
    },
    {
        "id": "61f5bff121743562",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1680,
        "wires": []
    },
    {
        "id": "7319ba17fc4bf7f0",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 30",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1760,
        "wires": []
    },
    {
        "id": "0247b4f86b0f81bc",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1780,
        "wires": []
    },
    {
        "id": "3e49e45dab735908",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in init",
        "links": [
            "8f49d9a24d4a82e6"
        ],
        "x": 365,
        "y": 1100,
        "wires": [
            [
                "80b6ee9dea3dec0b"
            ]
        ]
    },
    {
        "id": "c35c82a4af1fd19f",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE NAME",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "2",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 960,
        "y": 1100,
        "wires": [
            [
                "5d0d7599acfeaea0"
            ],
            []
        ]
    },
    {
        "id": "5d0d7599acfeaea0",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1100,
        "wires": []
    },
    {
        "id": "606ea455b923fdcc",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "INIT",
        "func": "msg.payload = false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1100,
        "wires": [
            [
                "c35c82a4af1fd19f",
                "600d146e84b3b8c3"
            ]
        ]
    },
    {
        "id": "0a2914935ace8cbc",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET SCW",
        "func": "\nmsg.payload = 2;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1900,
        "wires": [
            [
                "481dd9c5b34e5bc3",
                "9104880d308e34c8"
            ]
        ]
    },
    {
        "id": "481dd9c5b34e5bc3",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE SCW",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "9",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 760,
        "y": 1900,
        "wires": [
            [
                "50cd2b7411360f97",
                "21f16b5518f349e2"
            ],
            []
        ]
    },
    {
        "id": "55b7c298b6dea901",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 1900,
        "wires": [
            [
                "0a2914935ace8cbc"
            ]
        ]
    },
    {
        "id": "50cd2b7411360f97",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 34",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1900,
        "wires": []
    },
    {
        "id": "9104880d308e34c8",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 36",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 2000,
        "wires": []
    },
    {
        "id": "a2e4f4c5b6d2c217",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in stop",
        "links": [
            "8f49d9a24d4a82e6"
        ],
        "x": 365,
        "y": 760,
        "wires": [
            [
                "11350d166d01c3b8"
            ]
        ]
    },
    {
        "id": "11350d166d01c3b8",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "END PROCESS",
        "func": "const data = msg.payload;\nif(data[8] == true){\n    msg.payload = data[8];\n    node.warn(\"END\")\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 760,
        "wires": [
            [
                "9a7f9a3ae15a7af1"
            ]
        ]
    },
    {
        "id": "55bd9c5a3e17906c",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 37",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 720,
        "wires": []
    },
    {
        "id": "9a7f9a3ae15a7af1",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "END",
        "func": "msg.payload = false;\nnode.warn('END Process')\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 760,
        "wires": [
            [
                "55bd9c5a3e17906c",
                "719a3cb9f64887d4"
            ]
        ]
    },
    {
        "id": "719a3cb9f64887d4",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "END PROCESS",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "8",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 960,
        "y": 760,
        "wires": [
            [
                "297e2ce08f523e39"
            ],
            []
        ]
    },
    {
        "id": "b642b23da8d0ece3",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE IS ACCEPT ",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "4",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2120,
        "y": 260,
        "wires": [
            [
                "11ee5475bf7a2fab",
                "e88f5310defd6abf"
            ],
            []
        ]
    },
    {
        "id": "11ee5475bf7a2fab",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2340,
        "y": 220,
        "wires": []
    },
    {
        "id": "e88f5310defd6abf",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "IsFinish",
        "func": "msg.payload = true;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2300,
        "y": 320,
        "wires": [
            [
                "affca58ff5454c53"
            ]
        ]
    },
    {
        "id": "affca58ff5454c53",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE FINSIH",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "9",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2510,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "604d18e44af6c05f",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "GET ITEM",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2160,
        "wires": [
            [
                "1698623f902cfdd9"
            ]
        ]
    },
    {
        "id": "1698623f902cfdd9",
        "type": "http request",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:5030/process/new-item",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 630,
        "y": 2160,
        "wires": [
            [
                "a1102ee79b021ef3",
                "7e03819e0284393b"
            ]
        ]
    },
    {
        "id": "a1102ee79b021ef3",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET ",
        "func": "\nglobal.set('item',msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 2160,
        "wires": [
            [
                "fa0bd7cb02dd356e",
                "c3a3893507c9226b"
            ]
        ]
    },
    {
        "id": "fa0bd7cb02dd356e",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 39",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 2160,
        "wires": []
    },
    {
        "id": "7e03819e0284393b",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 870,
        "y": 2100,
        "wires": []
    },
    {
        "id": "c776c7f9be744c95",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2160,
        "wires": [
            [
                "604d18e44af6c05f"
            ]
        ]
    },
    {
        "id": "9d366b6f7867ce01",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "GET NEXT  ITEM",
        "func": "msg.payload = global.get(\"item\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 2600,
        "wires": [
            [
                "94bb914060dd9382",
                "65a2c79952261917"
            ]
        ]
    },
    {
        "id": "5aa6bad4b1932e91",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2600,
        "wires": [
            [
                "9d366b6f7867ce01"
            ]
        ]
    },
    {
        "id": "94bb914060dd9382",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 41",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 2600,
        "wires": []
    },
    {
        "id": "65a2c79952261917",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Ext-Data-Seq",
        "func": "const obj = msg.payload;\n\nmsg.payload = obj.item.item\nconst name = global.get('name');\nif (name !== undefined) {\n    const sequence = JSON.parse(obj.item.sequence);\n    const totalRow = sequence.length;\n    for(let i =0; i<totalRow; i++){\n        if(name == sequence[i].name && i < totalRow - 1)\n        {\n            node.warn(\"Next\")\n            node.warn(sequence[i+1].name);\n            msg.payload = sequence[i+1];\n            return msg;\n        }\n    }\n}\nmsg.payload = \"no-reset\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 2680,
        "wires": [
            [
                "c6563a75129d7b7c",
                "dcc148026edda1d0",
                "3ff6cc0ddcd05d5a",
                "6c550ad424d084fb",
                "9c48b198d440c3f7"
            ]
        ]
    },
    {
        "id": "064979fdc6ca0ac0",
        "type": "modbus-getter",
        "z": "dcbbdfc221d3d6dd",
        "name": "GET DATA",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "10",
        "server": "ad2ee103afd4939c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1330,
        "y": 600,
        "wires": [
            [
                "75c796a4c94069c2",
                "52f9113941e87406"
            ],
            []
        ]
    },
    {
        "id": "75c796a4c94069c2",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 43",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 520,
        "wires": []
    },
    {
        "id": "c6563a75129d7b7c",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET NAME",
        "func": "const data = msg.payload;\nif (data.name !== undefined){\n    msg.payload = data.name;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 2680,
        "wires": [
            [
                "dabbae2de63cf9fd"
            ]
        ]
    },
    {
        "id": "dcc148026edda1d0",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET MIN",
        "func": "const data = msg.payload;\nif (data.min != undefined){\n    msg.payload = data.min;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2760,
        "wires": [
            [
                "b343a91d0840ec96"
            ]
        ]
    },
    {
        "id": "3ff6cc0ddcd05d5a",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET MAX",
        "func": "\nconst data = msg.payload;\nif (data.max !== undefined){\nmsg.payload = data.max;\nreturn msg;\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2840,
        "wires": [
            [
                "840d4353f47d321c"
            ]
        ]
    },
    {
        "id": "6c550ad424d084fb",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET SCW",
        "func": "const data = msg.payload;\nif (data.scw_count !== undefined)\n{\n    msg.payload = data.scw_count;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 2920,
        "wires": [
            [
                "f5d42eb2db676c89"
            ]
        ]
    },
    {
        "id": "bae27148639ba2f7",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in set name",
        "links": [
            "dabbae2de63cf9fd",
            "b089aae56b8f4946"
        ],
        "x": 365,
        "y": 1380,
        "wires": [
            [
                "5da4db7731170747"
            ]
        ]
    },
    {
        "id": "0f9196ed7ea28f17",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in set min",
        "links": [
            "b343a91d0840ec96",
            "8b6827d15ca8e589"
        ],
        "x": 365,
        "y": 1540,
        "wires": [
            [
                "6770ab0d583eed96",
                "27831cbfc9d64245"
            ]
        ]
    },
    {
        "id": "654dc32741f1e84b",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in set max",
        "links": [
            "840d4353f47d321c",
            "64c179bb8cae8c36"
        ],
        "x": 365,
        "y": 1740,
        "wires": [
            [
                "adbedb5f89de226e",
                "0247b4f86b0f81bc"
            ]
        ]
    },
    {
        "id": "f32f0f373f3c82c4",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in set scw",
        "links": [
            "f5d42eb2db676c89",
            "16fb29871928cc45"
        ],
        "x": 365,
        "y": 1960,
        "wires": [
            [
                "9104880d308e34c8",
                "481dd9c5b34e5bc3"
            ]
        ]
    },
    {
        "id": "dabbae2de63cf9fd",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out set name",
        "mode": "link",
        "links": [
            "bae27148639ba2f7"
        ],
        "x": 1015,
        "y": 2680,
        "wires": []
    },
    {
        "id": "b343a91d0840ec96",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out set min",
        "mode": "link",
        "links": [
            "0f9196ed7ea28f17"
        ],
        "x": 1015,
        "y": 2760,
        "wires": []
    },
    {
        "id": "840d4353f47d321c",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out set max",
        "mode": "link",
        "links": [
            "654dc32741f1e84b"
        ],
        "x": 1015,
        "y": 2840,
        "wires": []
    },
    {
        "id": "f5d42eb2db676c89",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out set scw",
        "mode": "link",
        "links": [
            "f32f0f373f3c82c4"
        ],
        "x": 1015,
        "y": 2920,
        "wires": []
    },
    {
        "id": "a2349fe1b0c0a3d0",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Ext-Data-Init",
        "func": "const obj = msg.payload;\n\nconst sequence = JSON.parse(obj.item.sequence);\nif (sequence.length > 0) {\n    msg.payload = sequence[0];\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2340,
        "wires": [
            [
                "6f5c3c574705548f",
                "ac63bca9a5eda94a",
                "ade8a337e86893ce",
                "1d1dfded6ee71c24"
            ]
        ]
    },
    {
        "id": "b089aae56b8f4946",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out set name",
        "mode": "link",
        "links": [
            "bae27148639ba2f7"
        ],
        "x": 1015,
        "y": 2340,
        "wires": []
    },
    {
        "id": "8b6827d15ca8e589",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out set min",
        "mode": "link",
        "links": [
            "0f9196ed7ea28f17"
        ],
        "x": 1015,
        "y": 2420,
        "wires": []
    },
    {
        "id": "64c179bb8cae8c36",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out set max",
        "mode": "link",
        "links": [
            "654dc32741f1e84b"
        ],
        "x": 1015,
        "y": 2500,
        "wires": []
    },
    {
        "id": "16fb29871928cc45",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out set scw",
        "mode": "link",
        "links": [
            "f32f0f373f3c82c4"
        ],
        "x": 1015,
        "y": 2580,
        "wires": []
    },
    {
        "id": "118cb6afd1dc1024",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "INIT ITEM",
        "func": "msg.payload = global.get(\"item\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2340,
        "wires": [
            [
                "a2349fe1b0c0a3d0"
            ]
        ]
    },
    {
        "id": "31ce6fc762ac3613",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2340,
        "wires": [
            [
                "118cb6afd1dc1024"
            ]
        ]
    },
    {
        "id": "6f5c3c574705548f",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET NAME",
        "func": "const data = msg.payload;\nif (data.name !== undefined){\n    msg.payload = data.name;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 2340,
        "wires": [
            [
                "b089aae56b8f4946"
            ]
        ]
    },
    {
        "id": "ac63bca9a5eda94a",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET MIN",
        "func": "const data = msg.payload;\nif (data.min != undefined){\n    msg.payload = data.min;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2420,
        "wires": [
            [
                "8b6827d15ca8e589"
            ]
        ]
    },
    {
        "id": "ade8a337e86893ce",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET MAX",
        "func": "\nconst data = msg.payload;\nif (data.max !== undefined){\nmsg.payload = data.max;\nreturn msg;\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2500,
        "wires": [
            [
                "64c179bb8cae8c36"
            ]
        ]
    },
    {
        "id": "1d1dfded6ee71c24",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET SCW",
        "func": "const data = msg.payload;\nif (data.scw_count !== undefined)\n{\n    msg.payload = data.scw_count;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 2580,
        "wires": [
            [
                "16fb29871928cc45"
            ]
        ]
    },
    {
        "id": "96910aa18e8b146d",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE SCW",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "18",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1280,
        "y": 1840,
        "wires": [
            [
                "233c44ee0f7d60d8"
            ],
            []
        ]
    },
    {
        "id": "21f16b5518f349e2",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "RESET SCW",
        "func": "\nmsg.payload = 0;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1840,
        "wires": [
            [
                "96910aa18e8b146d",
                "e22e40a243dded35"
            ]
        ]
    },
    {
        "id": "84a0ea0fff17a271",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "RESET SCW",
        "func": "global.set('is-reset-sensor',true);\n\nmsg.payload = true;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1960,
        "wires": [
            [
                "ee5eb696cdbb5ee2",
                "71096be208adef1d"
            ]
        ]
    },
    {
        "id": "ee5eb696cdbb5ee2",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE RESET",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "11",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1750,
        "y": 1960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7f7889c40891caf5",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in set init item",
        "links": [
            "6ca422021841aa23",
            "c3a3893507c9226b"
        ],
        "x": 225,
        "y": 2280,
        "wires": [
            [
                "118cb6afd1dc1024",
                "15488c0293e512d4"
            ]
        ]
    },
    {
        "id": "ed75260fdb68bc61",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in set next item",
        "links": [
            "10c4eeb97d6b9af1"
        ],
        "x": 225,
        "y": 2540,
        "wires": [
            [
                "9d366b6f7867ce01"
            ]
        ]
    },
    {
        "id": "9c48b198d440c3f7",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "RESET ITEM",
        "func": "const data = msg.payload;\nif(data === 'reset'){\n    msg.payload = true;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 3020,
        "wires": [
            [
                "6ca422021841aa23"
            ]
        ]
    },
    {
        "id": "6ca422021841aa23",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out reset item = 0",
        "mode": "link",
        "links": [
            "7f7889c40891caf5"
        ],
        "x": 1015,
        "y": 3020,
        "wires": []
    },
    {
        "id": "15488c0293e512d4",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 44",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 2280,
        "wires": []
    },
    {
        "id": "10c4eeb97d6b9af1",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "ed75260fdb68bc61"
        ],
        "x": 2505,
        "y": 620,
        "wires": []
    },
    {
        "id": "87735bb56d3e5d45",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "RESET ITEM",
        "func": "const data = msg.payload;\nif(data == true){\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 380,
        "wires": [
            [
                "404c82f403b81e86"
            ]
        ]
    },
    {
        "id": "404c82f403b81e86",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out reset item",
        "mode": "link",
        "links": [
            "d1879916104ac98e"
        ],
        "x": 2165,
        "y": 380,
        "wires": []
    },
    {
        "id": "600d146e84b3b8c3",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out reset item",
        "mode": "link",
        "links": [
            "d1879916104ac98e"
        ],
        "x": 895,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d1879916104ac98e",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in get item",
        "links": [
            "0b7f0e72fb293be4",
            "600d146e84b3b8c3",
            "cd4820ef6662528e",
            "404c82f403b81e86"
        ],
        "x": 265,
        "y": 2100,
        "wires": [
            [
                "604d18e44af6c05f"
            ]
        ]
    },
    {
        "id": "c3a3893507c9226b",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out get info",
        "mode": "link",
        "links": [
            "7f7889c40891caf5"
        ],
        "x": 1015,
        "y": 2220,
        "wires": []
    },
    {
        "id": "9f4407088bf5bd5e",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Manage",
        "func": "const _item = global.get(\"item\");\nconst sum_scw_count = _item.item.sum_scw_count;\nconst _process = JSON.parse(_item.item.process)\n\nif (_process == null){\n    msg.payload = 'ng';\n    return msg;\n}\n// node.warn(sum_scw_count);\n// node.warn(_process);\nlet totalIncrease = 0;\n_process.forEach(item => {\n    totalIncrease += item.increase;\n});\n\nnode.warn({\"length\":_process.length});\n// const sum_scw_count = _item.item.sum_scw_count;\nnode.warn({ totalIncrease , sum_scw_count});\nif (totalIncrease == sum_scw_count){\n    msg.payload = \"ok\";\n}else{\n    msg.payload = \"ng\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 880,
        "wires": [
            [
                "4c4bee3f89c9c55e"
            ]
        ]
    },
    {
        "id": "0b7f0e72fb293be4",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out reset item",
        "mode": "link",
        "links": [
            "d1879916104ac98e"
        ],
        "x": 1375,
        "y": 880,
        "wires": []
    },
    {
        "id": "495c6611c913e32a",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "CHECK SCW",
        "func": "const data = global.get(\"scw_diff\");\n// node.warn(data);\nconst isNG = data['current_scw'] > data['scw_step'];\nif(isNG == true){\n    msg.payload = isNG;\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 700,
        "wires": [
            [
                "d081b49da914ba7f",
                "0147fe79c48bceeb"
            ]
        ]
    },
    {
        "id": "d081b49da914ba7f",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2540,
        "y": 760,
        "wires": []
    },
    {
        "id": "f48414d445243002",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 47",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 800,
        "wires": []
    },
    {
        "id": "7ece92efda87daac",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Validate DATA",
        "func": "let current_scw = global.get('current_scw');\n\nconst scw_step = global.get('scw_step');\n\nnode.warn({current_scw,scw_step});\n\nif (current_scw == scw_step){\n    // Update\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2340,
        "y": 620,
        "wires": [
            [
                "10c4eeb97d6b9af1"
            ]
        ]
    },
    {
        "id": "f978a0882a45a61a",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 2050,
        "y": 480,
        "wires": [
            [
                "68eebc81aa5ee063"
            ]
        ]
    },
    {
        "id": "68eebc81aa5ee063",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE PROCESS ITEM",
        "func": "const item = global.get(\"item\");\nconst name = global.get(\"name\");\n\nconst timeDiff = global.get('time_diff')\n\nconst currentDate = new Date();\nconst formattedDate = currentDate.getFullYear() + '-' +\n    ('0' + (currentDate.getMonth() + 1)).slice(-2) + '-' +\n    ('0' + currentDate.getDate()).slice(-2);\nconst formattedTime = ('0' + currentDate.getHours()).slice(-2) + ':' +\n    ('0' + currentDate.getMinutes()).slice(-2) + ':' +\n    ('0' + currentDate.getSeconds()).slice(-2);\n\nconst new_obj_process = {\n    \"name\": name,\n    \"increase\": 1,\n    \"time_diff\": timeDiff,\n    \"date\": formattedDate,\n    \"time\": formattedTime\n}\n\nlet _process = JSON.parse(item.item.process);\n\nif(_process == null){\n    _process = [];\n}\n_process.push(new_obj_process);\n\nconst _item = global.get(\"item\");\n_item.item.process = JSON.stringify(_process);\n// node.warn(item);\nconst sum_scw_count = _item.item.sum_scw_count;\nlet totalIncrease = 0;\n_process.forEach(item => {\n    totalIncrease += item.increase;\n});\n\nnode.warn({ totalIncrease , sum_scw_count});\n\nglobal.set('item', _item);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2300,
        "y": 560,
        "wires": [
            [
                "7ece92efda87daac",
                "8ae7f174fea141a3"
            ]
        ]
    },
    {
        "id": "e9b5117cf3d85f71",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in update log",
        "links": [
            "a9a14d79e50679a3",
            "da6b95c3137320d4",
            "0796da6d364a3352",
            "b512cb3d9b2777bf",
            "da312bf7bf59c312"
        ],
        "x": 1795,
        "y": 1200,
        "wires": [
            [
                "783047d537044255"
            ]
        ]
    },
    {
        "id": "d917966cf9d24419",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET LOG",
        "func": "const data = {\n    'message': \"test log\"\n}\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 920,
        "wires": [
            [
                "a9a14d79e50679a3"
            ]
        ]
    },
    {
        "id": "a9a14d79e50679a3",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out log 1",
        "mode": "link",
        "links": [
            "e9b5117cf3d85f71"
        ],
        "x": 1815,
        "y": 920,
        "wires": []
    },
    {
        "id": "6eaf2d6bf9116aa0",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1550,
        "y": 920,
        "wires": [
            [
                "d917966cf9d24419"
            ]
        ]
    },
    {
        "id": "0147fe79c48bceeb",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "STATE NG[10]",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "10",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2640,
        "y": 700,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cd4820ef6662528e",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out reset item",
        "mode": "link",
        "links": [
            "d1879916104ac98e"
        ],
        "x": 1025,
        "y": 1160,
        "wires": []
    },
    {
        "id": "6d01dc9d9be9f8e7",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET LOG",
        "func": "const data = {\n    'message': \"test log\"\n}\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1000,
        "wires": [
            [
                "da6b95c3137320d4"
            ]
        ]
    },
    {
        "id": "da6b95c3137320d4",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out log 1",
        "mode": "link",
        "links": [
            "e9b5117cf3d85f71"
        ],
        "x": 1655,
        "y": 1000,
        "wires": []
    },
    {
        "id": "783047d537044255",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE TO SERVER",
        "func": "msg.url = `http://localhost:5030/log`;\nconst _item = global.get(\"item\");\n\nconst item_no = _item.item.item;\nconst data = msg.payload;\ndata.item_no = item_no;\n\n// data.message = \"TEST\" + (Math.floor(Math.random() * 10) + 1).toString();\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 1160,
        "wires": [
            [
                "11fc0847995b4a57"
            ]
        ]
    },
    {
        "id": "11fc0847995b4a57",
        "type": "delay",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "pauseType": "random",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "3",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2460,
        "y": 1260,
        "wires": [
            [
                "207325f688ac1dd3",
                "93e6b980d370e45c"
            ]
        ]
    },
    {
        "id": "4f24ad6d481b6e16",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 690,
        "y": 920,
        "wires": [
            [
                "9f4407088bf5bd5e"
            ]
        ]
    },
    {
        "id": "4c4bee3f89c9c55e",
        "type": "switch",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "ng",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 880,
        "wires": [
            [
                "0b7f0e72fb293be4",
                "a0f258f198c18f54"
            ],
            [
                "d4e1fde4aa8eb2a7"
            ]
        ]
    },
    {
        "id": "d4e1fde4aa8eb2a7",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "TRUE",
        "func": "msg.payload = true;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 920,
        "wires": [
            [
                "f2bc951de789d19d"
            ]
        ]
    },
    {
        "id": "6955ad164b33d9dd",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in NG[10]",
        "links": [
            "f2bc951de789d19d"
        ],
        "x": 2505,
        "y": 660,
        "wires": [
            [
                "0147fe79c48bceeb"
            ]
        ]
    },
    {
        "id": "f2bc951de789d19d",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out NG",
        "mode": "link",
        "links": [
            "6955ad164b33d9dd"
        ],
        "x": 1375,
        "y": 920,
        "wires": []
    },
    {
        "id": "c0acb94266bf214f",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1940,
        "y": 720,
        "wires": [
            [
                "7ece92efda87daac"
            ]
        ]
    },
    {
        "id": "eb838245563cc03c",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 48",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2020,
        "y": 560,
        "wires": []
    },
    {
        "id": "cdc99b8114fa743b",
        "type": "modbus-getter",
        "z": "dcbbdfc221d3d6dd",
        "name": "GET DATA",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "10",
        "quantity": "10",
        "server": "ad2ee103afd4939c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1550,
        "y": 660,
        "wires": [
            [
                "f3cacccc219680d7"
            ],
            []
        ]
    },
    {
        "id": "f550f578797f8192",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 840,
        "wires": []
    },
    {
        "id": "52f9113941e87406",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET DATA",
        "func": "const arr = msg.payload;\nglobal.set('data-leonado',arr)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 600,
        "wires": [
            [
                "cdc99b8114fa743b"
            ]
        ]
    },
    {
        "id": "f3cacccc219680d7",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET DATA",
        "func": "const arr = global.get('data-leonado');\nconst data = msg.payload;\ndata.forEach(function(item) {\n    arr.push(item);\n});\nmsg.payload = arr;\nglobal.set('data-leonado',arr);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 720,
        "wires": [
            [
                "2e3e1f66e5a4b257"
            ]
        ]
    },
    {
        "id": "955c1b51336a5cb1",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 660,
        "wires": [
            [
                "51e1339c544741ae"
            ]
        ]
    },
    {
        "id": "0b95f40a01d8e1fb",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1280,
        "y": 2100,
        "wires": [
            [
                "84a0ea0fff17a271"
            ]
        ]
    },
    {
        "id": "233c44ee0f7d60d8",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 51",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 1840,
        "wires": []
    },
    {
        "id": "e22e40a243dded35",
        "type": "delay",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1270,
        "y": 1940,
        "wires": [
            [
                "84a0ea0fff17a271"
            ]
        ]
    },
    {
        "id": "11ecb11a6ef41b4e",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "GET STATE STOP [FALSE]",
        "func": "const data = msg.payload;\nif(data[1] == false){\n    msg.payload = data[1];\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 660,
        "wires": [
            [
                "6281f5fe27c58b64"
            ]
        ]
    },
    {
        "id": "6281f5fe27c58b64",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "RESET UPDATE",
        "func": "const isReset = global.get('is-reset-sensor');\nif(isReset == true){\n    msg.payload = true;\n    global.set('is-reset-sensor',false);\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 720,
        "wires": [
            [
                "2225e9e88685cf33"
            ]
        ]
    },
    {
        "id": "2225e9e88685cf33",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out update reset",
        "mode": "link",
        "links": [
            "066c46e265f5f142"
        ],
        "x": 1355,
        "y": 720,
        "wires": []
    },
    {
        "id": "066c46e265f5f142",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in update reset",
        "links": [
            "2225e9e88685cf33"
        ],
        "x": 1385,
        "y": 1900,
        "wires": [
            [
                "84a0ea0fff17a271"
            ]
        ]
    },
    {
        "id": "71096be208adef1d",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 52",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 2100,
        "wires": []
    },
    {
        "id": "f6a877fbf941cda4",
        "type": "modbus-write",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET PASS",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "12",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 1240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d72a983022e0e4e5",
        "type": "link in",
        "z": "dcbbdfc221d3d6dd",
        "name": "link in PASS",
        "links": [
            "a0f258f198c18f54"
        ],
        "x": 435,
        "y": 1240,
        "wires": [
            [
                "d4f166d309914927"
            ]
        ]
    },
    {
        "id": "a0f258f198c18f54",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out reset item",
        "mode": "link",
        "links": [
            "d72a983022e0e4e5"
        ],
        "x": 1375,
        "y": 840,
        "wires": []
    },
    {
        "id": "297e2ce08f523e39",
        "type": "modbus-getter",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "Input",
        "adr": "8",
        "quantity": "1",
        "server": "ad2ee103afd4939c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 440,
        "y": 860,
        "wires": [
            [
                "d5f4d8f75c5a1999",
                "5b453f428a04f14f"
            ],
            []
        ]
    },
    {
        "id": "d5f4d8f75c5a1999",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "Is END",
        "func": "const data = msg.payload;\nif (data[0] == true) {\n    msg.payload = data[0];\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 860,
        "wires": [
            [
                "9f4407088bf5bd5e",
                "0839f30dfcebb2be"
            ]
        ]
    },
    {
        "id": "5b453f428a04f14f",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 54",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 940,
        "wires": []
    },
    {
        "id": "59974c5b67641d88",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 920,
        "wires": [
            [
                "297e2ce08f523e39"
            ]
        ]
    },
    {
        "id": "3764e19836e6b5fe",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 55",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 560,
        "wires": []
    },
    {
        "id": "d4f166d309914927",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "TRUE",
        "func": "msg.payload = true;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1240,
        "wires": [
            [
                "f6a877fbf941cda4"
            ]
        ]
    },
    {
        "id": "6f72479d3eedb57f",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 390,
        "y": 1180,
        "wires": [
            [
                "d4f166d309914927"
            ]
        ]
    },
    {
        "id": "7c55028c792c1677",
        "type": "http request",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "method": "PUT",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2970,
        "y": 460,
        "wires": [
            [
                "45e4079543f0f505"
            ]
        ]
    },
    {
        "id": "8ae7f174fea141a3",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "UPDATE PROCESS TO SERVER",
        "func": "const _item = global.get(\"item\");\n\nconst item_no = _item.item.item;\n// node.warn(item_no);\n\nmsg.url = `http://localhost:5030/process/${item_no}/update`;\n\nconst time_start = global.get('timeSTART');\nconst time_stop = global.get('timeSTOP');\nnode.warn({ \"timeSTART\": time_start })\nnode.warn({\"timeSTOP\":time_stop})\n\n_item.item.time_start = time_start;\n_item.item.time_stop = time_stop;\nmsg.payload = _item;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 460,
        "wires": [
            [
                "7c55028c792c1677"
            ]
        ]
    },
    {
        "id": "45e4079543f0f505",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 460,
        "wires": []
    },
    {
        "id": "66d89bb7e501c7e9",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2340,
        "y": 420,
        "wires": [
            [
                "8ae7f174fea141a3"
            ]
        ]
    },
    {
        "id": "2e3e1f66e5a4b257",
        "type": "modbus-getter",
        "z": "dcbbdfc221d3d6dd",
        "name": "GET DATA",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "20",
        "quantity": "5",
        "server": "ad2ee103afd4939c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1550,
        "y": 780,
        "wires": [
            [
                "02b0dc282d03b32b"
            ],
            []
        ]
    },
    {
        "id": "02b0dc282d03b32b",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET DATA",
        "func": "const arr = global.get('data-leonado');\nconst data = msg.payload;\ndata.forEach(function(item) {\n    arr.push(item);\n});\nmsg.payload = arr;\nglobal.set('data-leonado',arr);\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 840,
        "wires": [
            [
                "13a5ae1d325656d1",
                "f550f578797f8192"
            ]
        ]
    },
    {
        "id": "3f89fd0765dda950",
        "type": "inject",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2190,
        "y": 1260,
        "wires": [
            [
                "11fc0847995b4a57"
            ]
        ]
    },
    {
        "id": "207325f688ac1dd3",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 57",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2700,
        "y": 1200,
        "wires": []
    },
    {
        "id": "132db71dd51a401d",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET LOG",
        "func": "const _data = msg.payload;\nconst upperStart16 = _data[0];\nconst lowerStart16 = _data[1];\nconst timeSTART = (upperStart16 << 16) | lowerStart16;\n\n\nconst data = {\n    'message': `START ${global.get('state-start')} : ${timeSTART.toString()}`\n}\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 440,
        "wires": [
            [
                "0796da6d364a3352"
            ]
        ]
    },
    {
        "id": "0796da6d364a3352",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out log 1",
        "mode": "link",
        "links": [
            "e9b5117cf3d85f71"
        ],
        "x": 1915,
        "y": 440,
        "wires": []
    },
    {
        "id": "96ec47a52e21e650",
        "type": "modbus-getter",
        "z": "dcbbdfc221d3d6dd",
        "name": "GET DATA",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "20",
        "quantity": "2",
        "server": "ad2ee103afd4939c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1570,
        "y": 440,
        "wires": [
            [
                "132db71dd51a401d"
            ],
            []
        ]
    },
    {
        "id": "93e6b980d370e45c",
        "type": "http request",
        "z": "dcbbdfc221d3d6dd",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 2710,
        "y": 1260,
        "wires": [
            [
                "3d1c86da7eb9cd29"
            ]
        ]
    },
    {
        "id": "3d1c86da7eb9cd29",
        "type": "debug",
        "z": "dcbbdfc221d3d6dd",
        "name": "debug 59",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2930,
        "y": 1220,
        "wires": []
    },
    {
        "id": "4461ba287742b974",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET LOG",
        "func": "\nconst data = {\n    'message': `UUID:`\n}\ntry{\n    const { card_uid, name} = msg.payload.cardRfid;\n    const { status } = msg.payload;\n\n    if (status){\n        if (card_uid !== undefined){\n            data.message = `UUID:${card_uid}, Accept!, name: ${name}`;\n        }\n    }else{\n        if (card_uid !== undefined) {\n            data.message = `UUID:${card_uid}, Not Accept!, name: ${name}`;\n        }else{\n            const { card_uid } = msg.payload;\n            data.message = `UUID:${card_uid}, Not Accept! , Not found information`;\n        }\n    }\n}catch(e){\n    const { card_uid } = msg.payload;\n    data.message = `UUID:${card_uid}, Not Accept! , Not found information`;\n}\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 120,
        "wires": [
            [
                "b512cb3d9b2777bf"
            ]
        ]
    },
    {
        "id": "b512cb3d9b2777bf",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out log 1",
        "mode": "link",
        "links": [
            "e9b5117cf3d85f71"
        ],
        "x": 1995,
        "y": 120,
        "wires": []
    },
    {
        "id": "0839f30dfcebb2be",
        "type": "function",
        "z": "dcbbdfc221d3d6dd",
        "name": "SET LOG",
        "func": "\nconst data = {\n    'message': `END Process`\n}\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 940,
        "wires": [
            [
                "da312bf7bf59c312"
            ]
        ]
    },
    {
        "id": "da312bf7bf59c312",
        "type": "link out",
        "z": "dcbbdfc221d3d6dd",
        "name": "link out log 1",
        "mode": "link",
        "links": [
            "e9b5117cf3d85f71"
        ],
        "x": 1035,
        "y": 940,
        "wires": []
    },
    {
        "id": "ad2ee103afd4939c",
        "type": "modbus-client",
        "name": "",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "queueLogEnabled": true,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyS0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1500",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": true,
        "showWarnings": true,
        "showLogs": true
    }
]